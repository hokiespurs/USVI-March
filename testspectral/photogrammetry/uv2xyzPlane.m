function [x,y,z] = uv2xyzPlane(K,R,T,u,v,planeconsts)
% Computes xyz projection coordinates assuming a pinhole camera using:
%
%      s * [u;v;1] = K*R*[x-T(1);y-T(2);z-T(3)]
%
%  K : interior orientation [fx 0 cx;0 fy cy;0 0 1]
%  R : rotation matrix from world to camera 
%  T : camera xyz location in world coordinates
%  u : horizontal pixels 0==left side of image
%  v : vertical pixels 0==top of image
%  x : x position of projected pixel in world coordinates
%  y : y position of projected pixel in world coordinates
%  z : z position of projected pixel in world coordinates
%  planeconsts = [x0 y0 z0 nx ny nz] where:
%
%     nx .* (x-x0) + ny .* (y-y0) + nz .* (z-z0) = 0

%% Break out place constants for readability
x0 = planeconsts(1);
y0 = planeconsts(2);
z0 = planeconsts(3);
nx = planeconsts(4);
ny = planeconsts(5);
nz = planeconsts(6);

%% Compute x, y, z
x = -((R(1,1)*R(3,3)*T(1)*K(2,3)*K(1,1)*ny - R(1,3)*R(3,1)*T(1)*K(2,3)*K(1,1)*ny + R(1,2)*R(3,3)*T(2)*K(2,3)*K(1,1)*ny - R(1,3)*R(3,2)*T(2)*K(2,3)*K(1,1)*ny - R(2,1)*R(3,3)*T(1)*K(1,3)*K(2,2)*ny + R(2,3)*R(3,1)*T(1)*K(1,3)*K(2,2)*ny - R(2,2)*R(3,3)*T(2)*K(1,3)*K(2,2)*ny + R(2,3)*R(3,2)*T(2)*K(1,3)*K(2,2)*ny - R(1,1)*R(3,2)*T(1)*K(2,3)*K(1,1)*nz + R(1,2)*R(3,1)*T(1)*K(2,3)*K(1,1)*nz + R(1,2)*R(3,3)*T(3)*K(2,3)*K(1,1)*nz - R(1,3)*R(3,2)*T(3)*K(2,3)*K(1,1)*nz + R(2,1)*R(3,2)*T(1)*K(1,3)*K(2,2)*nz - R(2,2)*R(3,1)*T(1)*K(1,3)*K(2,2)*nz - R(2,2)*R(3,3)*T(3)*K(1,3)*K(2,2)*nz + R(2,3)*R(3,2)*T(3)*K(1,3)*K(2,2)*nz + R(1,1)*R(2,3)*T(1)*K(1,1)*K(2,2)*ny - R(1,3)*R(2,1)*T(1)*K(1,1)*K(2,2)*ny + R(1,2)*R(2,3)*T(2)*K(1,1)*K(2,2)*ny - R(1,3)*R(2,2)*T(2)*K(1,1)*K(2,2)*ny - R(1,1)*R(2,2)*T(1)*K(1,1)*K(2,2)*nz + R(1,2)*R(2,1)*T(1)*K(1,1)*K(2,2)*nz + R(1,2)*R(2,3)*T(3)*K(1,1)*K(2,2)*nz - R(1,3)*R(2,2)*T(3)*K(1,1)*K(2,2)*nz + R(2,1)*R(3,3)*T(1)*K(2,2)*ny*u - R(2,3)*R(3,1)*T(1)*K(2,2)*ny*u + R(2,2)*R(3,3)*T(2)*K(2,2)*ny*u - R(2,3)*R(3,2)*T(2)*K(2,2)*ny*u - R(2,1)*R(3,2)*T(1)*K(2,2)*nz*u + R(2,2)*R(3,1)*T(1)*K(2,2)*nz*u + R(2,2)*R(3,3)*T(3)*K(2,2)*nz*u - R(2,3)*R(3,2)*T(3)*K(2,2)*nz*u - R(1,1)*R(3,3)*T(1)*K(1,1)*ny*v + R(1,3)*R(3,1)*T(1)*K(1,1)*ny*v - R(1,2)*R(3,3)*T(2)*K(1,1)*ny*v + R(1,3)*R(3,2)*T(2)*K(1,1)*ny*v + R(1,1)*R(3,2)*T(1)*K(1,1)*nz*v - R(1,2)*R(3,1)*T(1)*K(1,1)*nz*v - R(1,2)*R(3,3)*T(3)*K(1,1)*nz*v + R(1,3)*R(3,2)*T(3)*K(1,1)*nz*v - R(1,2)*R(3,3)*K(2,3)*K(1,1)*nx*x0 + R(1,3)*R(3,2)*K(2,3)*K(1,1)*nx*x0 + R(2,2)*R(3,3)*K(1,3)*K(2,2)*nx*x0 - R(2,3)*R(3,2)*K(1,3)*K(2,2)*nx*x0 - R(1,2)*R(3,3)*K(2,3)*K(1,1)*ny*y0 + R(1,3)*R(3,2)*K(2,3)*K(1,1)*ny*y0 + R(2,2)*R(3,3)*K(1,3)*K(2,2)*ny*y0 - R(2,3)*R(3,2)*K(1,3)*K(2,2)*ny*y0 - R(1,2)*R(3,3)*K(2,3)*K(1,1)*nz*z0 + R(1,3)*R(3,2)*K(2,3)*K(1,1)*nz*z0 + R(2,2)*R(3,3)*K(1,3)*K(2,2)*nz*z0 - R(2,3)*R(3,2)*K(1,3)*K(2,2)*nz*z0 - R(1,2)*R(2,3)*K(1,1)*K(2,2)*nx*x0 + R(1,3)*R(2,2)*K(1,1)*K(2,2)*nx*x0 - R(1,2)*R(2,3)*K(1,1)*K(2,2)*ny*y0 + R(1,3)*R(2,2)*K(1,1)*K(2,2)*ny*y0 - R(1,2)*R(2,3)*K(1,1)*K(2,2)*nz*z0 + R(1,3)*R(2,2)*K(1,1)*K(2,2)*nz*z0 - R(2,2)*R(3,3)*K(2,2)*nx*u*x0 + R(2,3)*R(3,2)*K(2,2)*nx*u*x0 + R(1,2)*R(3,3)*K(1,1)*nx*v*x0 - R(1,3)*R(3,2)*K(1,1)*nx*v*x0 - R(2,2)*R(3,3)*K(2,2)*ny*u*y0 + R(2,3)*R(3,2)*K(2,2)*ny*u*y0 + R(1,2)*R(3,3)*K(1,1)*ny*v*y0 - R(1,3)*R(3,2)*K(1,1)*ny*v*y0 - R(2,2)*R(3,3)*K(2,2)*nz*u*z0 + R(2,3)*R(3,2)*K(2,2)*nz*u*z0 + R(1,2)*R(3,3)*K(1,1)*nz*v*z0 - R(1,3)*R(3,2)*K(1,1)*nz*v*z0))./(R(1,2)*R(3,3)*K(2,3)*K(1,1)*nx - R(1,3)*R(3,2)*K(2,3)*K(1,1)*nx - R(2,2)*R(3,3)*K(1,3)*K(2,2)*nx + R(2,3)*R(3,2)*K(1,3)*K(2,2)*nx - R(1,1)*R(3,3)*K(2,3)*K(1,1)*ny + R(1,3)*R(3,1)*K(2,3)*K(1,1)*ny + R(2,1)*R(3,3)*K(1,3)*K(2,2)*ny - R(2,3)*R(3,1)*K(1,3)*K(2,2)*ny + R(1,1)*R(3,2)*K(2,3)*K(1,1)*nz - R(1,2)*R(3,1)*K(2,3)*K(1,1)*nz - R(2,1)*R(3,2)*K(1,3)*K(2,2)*nz + R(2,2)*R(3,1)*K(1,3)*K(2,2)*nz + R(1,2)*R(2,3)*K(1,1)*K(2,2)*nx - R(1,3)*R(2,2)*K(1,1)*K(2,2)*nx - R(1,1)*R(2,3)*K(1,1)*K(2,2)*ny + R(1,3)*R(2,1)*K(1,1)*K(2,2)*ny + R(1,1)*R(2,2)*K(1,1)*K(2,2)*nz - R(1,2)*R(2,1)*K(1,1)*K(2,2)*nz + R(2,2)*R(3,3)*K(2,2)*nx*u - R(2,3)*R(3,2)*K(2,2)*nx*u - R(2,1)*R(3,3)*K(2,2)*ny*u + R(2,3)*R(3,1)*K(2,2)*ny*u + R(2,1)*R(3,2)*K(2,2)*nz*u - R(2,2)*R(3,1)*K(2,2)*nz*u - R(1,2)*R(3,3)*K(1,1)*nx*v + R(1,3)*R(3,2)*K(1,1)*nx*v + R(1,1)*R(3,3)*K(1,1)*ny*v - R(1,3)*R(3,1)*K(1,1)*ny*v - R(1,1)*R(3,2)*K(1,1)*nz*v + R(1,2)*R(3,1)*K(1,1)*nz*v);
y = ((R(1,1)*R(3,3)*T(1)*K(2,3)*K(1,1)*nx - R(1,3)*R(3,1)*T(1)*K(2,3)*K(1,1)*nx + R(1,2)*R(3,3)*T(2)*K(2,3)*K(1,1)*nx - R(1,3)*R(3,2)*T(2)*K(2,3)*K(1,1)*nx - R(2,1)*R(3,3)*T(1)*K(1,3)*K(2,2)*nx + R(2,3)*R(3,1)*T(1)*K(1,3)*K(2,2)*nx - R(2,2)*R(3,3)*T(2)*K(1,3)*K(2,2)*nx + R(2,3)*R(3,2)*T(2)*K(1,3)*K(2,2)*nx + R(1,1)*R(3,2)*T(2)*K(2,3)*K(1,1)*nz - R(1,2)*R(3,1)*T(2)*K(2,3)*K(1,1)*nz + R(1,1)*R(3,3)*T(3)*K(2,3)*K(1,1)*nz - R(1,3)*R(3,1)*T(3)*K(2,3)*K(1,1)*nz - R(2,1)*R(3,2)*T(2)*K(1,3)*K(2,2)*nz + R(2,2)*R(3,1)*T(2)*K(1,3)*K(2,2)*nz - R(2,1)*R(3,3)*T(3)*K(1,3)*K(2,2)*nz + R(2,3)*R(3,1)*T(3)*K(1,3)*K(2,2)*nz + R(1,1)*R(2,3)*T(1)*K(1,1)*K(2,2)*nx - R(1,3)*R(2,1)*T(1)*K(1,1)*K(2,2)*nx + R(1,2)*R(2,3)*T(2)*K(1,1)*K(2,2)*nx - R(1,3)*R(2,2)*T(2)*K(1,1)*K(2,2)*nx + R(1,1)*R(2,2)*T(2)*K(1,1)*K(2,2)*nz - R(1,2)*R(2,1)*T(2)*K(1,1)*K(2,2)*nz + R(1,1)*R(2,3)*T(3)*K(1,1)*K(2,2)*nz - R(1,3)*R(2,1)*T(3)*K(1,1)*K(2,2)*nz + R(2,1)*R(3,3)*T(1)*K(2,2)*nx*u - R(2,3)*R(3,1)*T(1)*K(2,2)*nx*u + R(2,2)*R(3,3)*T(2)*K(2,2)*nx*u - R(2,3)*R(3,2)*T(2)*K(2,2)*nx*u + R(2,1)*R(3,2)*T(2)*K(2,2)*nz*u - R(2,2)*R(3,1)*T(2)*K(2,2)*nz*u + R(2,1)*R(3,3)*T(3)*K(2,2)*nz*u - R(2,3)*R(3,1)*T(3)*K(2,2)*nz*u - R(1,1)*R(3,3)*T(1)*K(1,1)*nx*v + R(1,3)*R(3,1)*T(1)*K(1,1)*nx*v - R(1,2)*R(3,3)*T(2)*K(1,1)*nx*v + R(1,3)*R(3,2)*T(2)*K(1,1)*nx*v - R(1,1)*R(3,2)*T(2)*K(1,1)*nz*v + R(1,2)*R(3,1)*T(2)*K(1,1)*nz*v - R(1,1)*R(3,3)*T(3)*K(1,1)*nz*v + R(1,3)*R(3,1)*T(3)*K(1,1)*nz*v - R(1,1)*R(3,3)*K(2,3)*K(1,1)*nx*x0 + R(1,3)*R(3,1)*K(2,3)*K(1,1)*nx*x0 + R(2,1)*R(3,3)*K(1,3)*K(2,2)*nx*x0 - R(2,3)*R(3,1)*K(1,3)*K(2,2)*nx*x0 - R(1,1)*R(3,3)*K(2,3)*K(1,1)*ny*y0 + R(1,3)*R(3,1)*K(2,3)*K(1,1)*ny*y0 + R(2,1)*R(3,3)*K(1,3)*K(2,2)*ny*y0 - R(2,3)*R(3,1)*K(1,3)*K(2,2)*ny*y0 - R(1,1)*R(3,3)*K(2,3)*K(1,1)*nz*z0 + R(1,3)*R(3,1)*K(2,3)*K(1,1)*nz*z0 + R(2,1)*R(3,3)*K(1,3)*K(2,2)*nz*z0 - R(2,3)*R(3,1)*K(1,3)*K(2,2)*nz*z0 - R(1,1)*R(2,3)*K(1,1)*K(2,2)*nx*x0 + R(1,3)*R(2,1)*K(1,1)*K(2,2)*nx*x0 - R(1,1)*R(2,3)*K(1,1)*K(2,2)*ny*y0 + R(1,3)*R(2,1)*K(1,1)*K(2,2)*ny*y0 - R(1,1)*R(2,3)*K(1,1)*K(2,2)*nz*z0 + R(1,3)*R(2,1)*K(1,1)*K(2,2)*nz*z0 - R(2,1)*R(3,3)*K(2,2)*nx*u*x0 + R(2,3)*R(3,1)*K(2,2)*nx*u*x0 + R(1,1)*R(3,3)*K(1,1)*nx*v*x0 - R(1,3)*R(3,1)*K(1,1)*nx*v*x0 - R(2,1)*R(3,3)*K(2,2)*ny*u*y0 + R(2,3)*R(3,1)*K(2,2)*ny*u*y0 + R(1,1)*R(3,3)*K(1,1)*ny*v*y0 - R(1,3)*R(3,1)*K(1,1)*ny*v*y0 - R(2,1)*R(3,3)*K(2,2)*nz*u*z0 + R(2,3)*R(3,1)*K(2,2)*nz*u*z0 + R(1,1)*R(3,3)*K(1,1)*nz*v*z0 - R(1,3)*R(3,1)*K(1,1)*nz*v*z0))./(R(1,2)*R(3,3)*K(2,3)*K(1,1)*nx - R(1,3)*R(3,2)*K(2,3)*K(1,1)*nx - R(2,2)*R(3,3)*K(1,3)*K(2,2)*nx + R(2,3)*R(3,2)*K(1,3)*K(2,2)*nx - R(1,1)*R(3,3)*K(2,3)*K(1,1)*ny + R(1,3)*R(3,1)*K(2,3)*K(1,1)*ny + R(2,1)*R(3,3)*K(1,3)*K(2,2)*ny - R(2,3)*R(3,1)*K(1,3)*K(2,2)*ny + R(1,1)*R(3,2)*K(2,3)*K(1,1)*nz - R(1,2)*R(3,1)*K(2,3)*K(1,1)*nz - R(2,1)*R(3,2)*K(1,3)*K(2,2)*nz + R(2,2)*R(3,1)*K(1,3)*K(2,2)*nz + R(1,2)*R(2,3)*K(1,1)*K(2,2)*nx - R(1,3)*R(2,2)*K(1,1)*K(2,2)*nx - R(1,1)*R(2,3)*K(1,1)*K(2,2)*ny + R(1,3)*R(2,1)*K(1,1)*K(2,2)*ny + R(1,1)*R(2,2)*K(1,1)*K(2,2)*nz - R(1,2)*R(2,1)*K(1,1)*K(2,2)*nz + R(2,2)*R(3,3)*K(2,2)*nx*u - R(2,3)*R(3,2)*K(2,2)*nx*u - R(2,1)*R(3,3)*K(2,2)*ny*u + R(2,3)*R(3,1)*K(2,2)*ny*u + R(2,1)*R(3,2)*K(2,2)*nz*u - R(2,2)*R(3,1)*K(2,2)*nz*u - R(1,2)*R(3,3)*K(1,1)*nx*v + R(1,3)*R(3,2)*K(1,1)*nx*v + R(1,1)*R(3,3)*K(1,1)*ny*v - R(1,3)*R(3,1)*K(1,1)*ny*v - R(1,1)*R(3,2)*K(1,1)*nz*v + R(1,2)*R(3,1)*K(1,1)*nz*v);
z = -((R(1,1)*R(3,2)*T(1)*K(2,3)*K(1,1)*nx - R(1,2)*R(3,1)*T(1)*K(2,3)*K(1,1)*nx - R(1,2)*R(3,3)*T(3)*K(2,3)*K(1,1)*nx + R(1,3)*R(3,2)*T(3)*K(2,3)*K(1,1)*nx - R(2,1)*R(3,2)*T(1)*K(1,3)*K(2,2)*nx + R(2,2)*R(3,1)*T(1)*K(1,3)*K(2,2)*nx + R(2,2)*R(3,3)*T(3)*K(1,3)*K(2,2)*nx - R(2,3)*R(3,2)*T(3)*K(1,3)*K(2,2)*nx + R(1,1)*R(3,2)*T(2)*K(2,3)*K(1,1)*ny - R(1,2)*R(3,1)*T(2)*K(2,3)*K(1,1)*ny + R(1,1)*R(3,3)*T(3)*K(2,3)*K(1,1)*ny - R(1,3)*R(3,1)*T(3)*K(2,3)*K(1,1)*ny - R(2,1)*R(3,2)*T(2)*K(1,3)*K(2,2)*ny + R(2,2)*R(3,1)*T(2)*K(1,3)*K(2,2)*ny - R(2,1)*R(3,3)*T(3)*K(1,3)*K(2,2)*ny + R(2,3)*R(3,1)*T(3)*K(1,3)*K(2,2)*ny + R(1,1)*R(2,2)*T(1)*K(1,1)*K(2,2)*nx - R(1,2)*R(2,1)*T(1)*K(1,1)*K(2,2)*nx - R(1,2)*R(2,3)*T(3)*K(1,1)*K(2,2)*nx + R(1,3)*R(2,2)*T(3)*K(1,1)*K(2,2)*nx + R(1,1)*R(2,2)*T(2)*K(1,1)*K(2,2)*ny - R(1,2)*R(2,1)*T(2)*K(1,1)*K(2,2)*ny + R(1,1)*R(2,3)*T(3)*K(1,1)*K(2,2)*ny - R(1,3)*R(2,1)*T(3)*K(1,1)*K(2,2)*ny + R(2,1)*R(3,2)*T(1)*K(2,2)*nx*u - R(2,2)*R(3,1)*T(1)*K(2,2)*nx*u - R(2,2)*R(3,3)*T(3)*K(2,2)*nx*u + R(2,3)*R(3,2)*T(3)*K(2,2)*nx*u + R(2,1)*R(3,2)*T(2)*K(2,2)*ny*u - R(2,2)*R(3,1)*T(2)*K(2,2)*ny*u + R(2,1)*R(3,3)*T(3)*K(2,2)*ny*u - R(2,3)*R(3,1)*T(3)*K(2,2)*ny*u - R(1,1)*R(3,2)*T(1)*K(1,1)*nx*v + R(1,2)*R(3,1)*T(1)*K(1,1)*nx*v + R(1,2)*R(3,3)*T(3)*K(1,1)*nx*v - R(1,3)*R(3,2)*T(3)*K(1,1)*nx*v - R(1,1)*R(3,2)*T(2)*K(1,1)*ny*v + R(1,2)*R(3,1)*T(2)*K(1,1)*ny*v - R(1,1)*R(3,3)*T(3)*K(1,1)*ny*v + R(1,3)*R(3,1)*T(3)*K(1,1)*ny*v - R(1,1)*R(3,2)*K(2,3)*K(1,1)*nx*x0 + R(1,2)*R(3,1)*K(2,3)*K(1,1)*nx*x0 + R(2,1)*R(3,2)*K(1,3)*K(2,2)*nx*x0 - R(2,2)*R(3,1)*K(1,3)*K(2,2)*nx*x0 - R(1,1)*R(3,2)*K(2,3)*K(1,1)*ny*y0 + R(1,2)*R(3,1)*K(2,3)*K(1,1)*ny*y0 + R(2,1)*R(3,2)*K(1,3)*K(2,2)*ny*y0 - R(2,2)*R(3,1)*K(1,3)*K(2,2)*ny*y0 - R(1,1)*R(3,2)*K(2,3)*K(1,1)*nz*z0 + R(1,2)*R(3,1)*K(2,3)*K(1,1)*nz*z0 + R(2,1)*R(3,2)*K(1,3)*K(2,2)*nz*z0 - R(2,2)*R(3,1)*K(1,3)*K(2,2)*nz*z0 - R(1,1)*R(2,2)*K(1,1)*K(2,2)*nx*x0 + R(1,2)*R(2,1)*K(1,1)*K(2,2)*nx*x0 - R(1,1)*R(2,2)*K(1,1)*K(2,2)*ny*y0 + R(1,2)*R(2,1)*K(1,1)*K(2,2)*ny*y0 - R(1,1)*R(2,2)*K(1,1)*K(2,2)*nz*z0 + R(1,2)*R(2,1)*K(1,1)*K(2,2)*nz*z0 - R(2,1)*R(3,2)*K(2,2)*nx*u*x0 + R(2,2)*R(3,1)*K(2,2)*nx*u*x0 + R(1,1)*R(3,2)*K(1,1)*nx*v*x0 - R(1,2)*R(3,1)*K(1,1)*nx*v*x0 - R(2,1)*R(3,2)*K(2,2)*ny*u*y0 + R(2,2)*R(3,1)*K(2,2)*ny*u*y0 + R(1,1)*R(3,2)*K(1,1)*ny*v*y0 - R(1,2)*R(3,1)*K(1,1)*ny*v*y0 - R(2,1)*R(3,2)*K(2,2)*nz*u*z0 + R(2,2)*R(3,1)*K(2,2)*nz*u*z0 + R(1,1)*R(3,2)*K(1,1)*nz*v*z0 - R(1,2)*R(3,1)*K(1,1)*nz*v*z0))./(R(1,2)*R(3,3)*K(2,3)*K(1,1)*nx - R(1,3)*R(3,2)*K(2,3)*K(1,1)*nx - R(2,2)*R(3,3)*K(1,3)*K(2,2)*nx + R(2,3)*R(3,2)*K(1,3)*K(2,2)*nx - R(1,1)*R(3,3)*K(2,3)*K(1,1)*ny + R(1,3)*R(3,1)*K(2,3)*K(1,1)*ny + R(2,1)*R(3,3)*K(1,3)*K(2,2)*ny - R(2,3)*R(3,1)*K(1,3)*K(2,2)*ny + R(1,1)*R(3,2)*K(2,3)*K(1,1)*nz - R(1,2)*R(3,1)*K(2,3)*K(1,1)*nz - R(2,1)*R(3,2)*K(1,3)*K(2,2)*nz + R(2,2)*R(3,1)*K(1,3)*K(2,2)*nz + R(1,2)*R(2,3)*K(1,1)*K(2,2)*nx - R(1,3)*R(2,2)*K(1,1)*K(2,2)*nx - R(1,1)*R(2,3)*K(1,1)*K(2,2)*ny + R(1,3)*R(2,1)*K(1,1)*K(2,2)*ny + R(1,1)*R(2,2)*K(1,1)*K(2,2)*nz - R(1,2)*R(2,1)*K(1,1)*K(2,2)*nz + R(2,2)*R(3,3)*K(2,2)*nx*u - R(2,3)*R(3,2)*K(2,2)*nx*u - R(2,1)*R(3,3)*K(2,2)*ny*u + R(2,3)*R(3,1)*K(2,2)*ny*u + R(2,1)*R(3,2)*K(2,2)*nz*u - R(2,2)*R(3,1)*K(2,2)*nz*u - R(1,2)*R(3,3)*K(1,1)*nx*v + R(1,3)*R(3,2)*K(1,1)*nx*v + R(1,1)*R(3,3)*K(1,1)*ny*v - R(1,3)*R(3,1)*K(1,1)*ny*v - R(1,1)*R(3,2)*K(1,1)*nz*v + R(1,2)*R(3,1)*K(1,1)*nz*v);

end

function printEqns
%% symbolic toolbox 
syms fx fy cx cy 
syms T1 T2 T3 x y z u v
syms nx ny nz x0 y0 z0

R = sym('R%d%d', [3 3]);
K = [fx 0 cx;0 fy cy;0 0 1];

UVS = K * R * [x-T1; y-T2; z-T3];

Eqn(1,1) = u == UVS(1)/UVS(3);
Eqn(2,1) = v == UVS(2)/UVS(3);
Eqn(3,1) = 0 == nx .* (x-x0) + ny .* (y-y0) + nz .* (z-z0);

sol = solve(Eqn,[x y z]);

strXeqn = sprintf('x = %s',sol.x);
strYeqn = sprintf('y = %s',sol.y);
strZeqn = sprintf('z = %s',sol.z);
for i=1:3
    for j=1:3
        strXeqn = strrep(strXeqn,sprintf('R%i%i',i,j),sprintf('R(%i,%i)',i,j));
        strYeqn = strrep(strYeqn,sprintf('R%i%i',i,j),sprintf('R(%i,%i)',i,j));
        strZeqn = strrep(strZeqn,sprintf('R%i%i',i,j),sprintf('R(%i,%i)',i,j));
    end
    strXeqn = strrep(strXeqn,sprintf('T%i',i),sprintf('T(%i)',i));
    strYeqn = strrep(strYeqn,sprintf('T%i',i),sprintf('T(%i)',i));
    strZeqn = strrep(strZeqn,sprintf('T%i',i),sprintf('T(%i)',i));
end
oldstr = {'fx','fy','cx','cy','/','1.0*'};
newstr = {'K(1,1)','K(2,2)','K(1,3)','K(2,3)','./',''};

for i=1:numel(oldstr)
strXeqn = strrep(strXeqn,oldstr{i},newstr{i});
strYeqn = strrep(strYeqn,oldstr{i},newstr{i});
strZeqn = strrep(strZeqn,oldstr{i},newstr{i});
end

fprintf('%s;\n%s;\n%s;\n',strXeqn,strYeqn,strZeqn);
end
